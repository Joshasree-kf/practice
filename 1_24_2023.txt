1. solved python problems 
1.#Write a python script to interchange first and last element of given list.

list=[]
n=int(input())
for i in range (0,n):
    x=int(input())
    list.append(x)

size=len(list)
temp=list[0]
list[0]=list[n-1]
list[n-1]=temp

print(list)

2.#Write a python code to find first two maximum no in a list.

mylist=[]
n=int(input())
for i in range (0,n):
    x=int(input())
    mylist.append(x)
sorted(mylist)
y=max(mylist)
print(max(mylist))
mylist.remove(max(mylist))
print(max(mylist))
mylist.append(y)

3.#product exept itself
def productarray(arr, n):
  if n==1:
    return 0
  temp=1
  for i in range (0,n):
    temp*=arr[i]
  product=[]
  for i in range (0,n):
    x=temp//arr[i]
    product.append(x)
  return product

arr1=[]
n=int(input())
for i in range (0,n):
    x=int(input())
    arr1.append(x)
productarray(arr1,n)

4.'''Write a python code to Extract Unique values from dictionary value which is a list and return it in the form of sorted list.
Input : dict = {'first': [5, 6, 7, 8],
             'second': [10, 13, 7, 5],
             'third': [6, 12, 10, 8],
             'fourth': [1, 2, 5]}
Output: [1, 2, 5, 6, 7, 8, 10, 12, 13]
'''
dic={'first': [5, 6, 7, 8],'second': [10, 13, 7, 5],'third': [6, 12, 10, 8],'fourth': [1, 2, 5]}
list1=[]
list2=[]
for i in dic.values():
  for j in i:
    list1.append(j)

list2=list(set(list1))
list2.sort()
print(list2)

5.https://www.hackerrank.com/challenges/python-mutations/problem?isFullScreen=true
def mutate_string(string, position, character):
    
    return string[:position]+character+string[position+1:]

6.https://www.hackerrank.com/challenges/python-power-mod-power/problem?isFullScreen=true
a=int(input())
b=int(input())
m=int(input())
print(pow(a,b))
print(pow(a,b,m))

7.https://leetcode.com/problems/climbing-stairs/

def climbStairs(self, n: int) -> int:
        a=1
        b=1
        for i in range (1,n):
            c=a+b
            a=b
            b=c
        return b

8.https://leetcode.com/problems/power-of-two/
def isPowerOfTwo(self, n: int) -> bool:
        power = 0
        temp = 0
        while temp <= n:
            temp = math.pow(2, power)
            if temp == n:
                return True
            elif temp > n:
                return False
            power+=1
9.https://leetcode.com/problems/add-digits/
def addDigits(self, num: int) -> int:
        if num == 0 : return 0
        if num % 9 == 0 : return 9
        else : return (num % 9)
10.https://leetcode.com/problems/shuffle-the-array/
   def shuffle(self, nums: List[int], n: int) -> List[int]:
        res=[]
        for i in range (0,n):
            xi=nums[i]
            yi=nums[i+n]
            res.append(xi)
            res.append(yi)
        return res
   