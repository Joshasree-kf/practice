# -*- coding: utf-8 -*-
"""dictionary problems.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hwVYckY4XPcpREHf7hMLsJBaEhvcVOC7
"""

'''Write a python code to Extract Unique values from dictionary value which is a list and return it in the form of sorted list.
Input : dict = {'first': [5, 6, 7, 8],
             'second': [10, 13, 7, 5],
             'third': [6, 12, 10, 8],
             'fourth': [1, 2, 5]}
Output: [1, 2, 5, 6, 7, 8, 10, 12, 13]
'''
dic={'first': [5, 6, 7, 8],'second': [10, 13, 7, 5],'third': [6, 12, 10, 8],'fourth': [1, 2, 5]}
list1=[]
list2=[]
for i in dic.values():
  for j in i:
    list1.append(j)

list2=list(set(list1))
list2.sort()
print(list2)

'''Given a binary array nums containing 0 and 1 only as elements,return the maximum length of a contiguous subarray with an equal number of 0 and 1
Time complexity should be O(n).
Input: nums = [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
https://leetcode.com/problems/contiguous-array/
'''
       
def longcontigioussubarray(nums,n):
  sum=0
  maxlen=-1
  dict1={}
  for i in range (0,len(nums)):
    if nums[i]==1:
      p=1
    if nums[i]==0:
      p=-1
    sum=sum+p
    if sum in dict1 :
      if sum==0:
        if i+1>maxlen:
          maxlen=i+1
      else:
        x=dict1.get(sum)
        if (i-x)>maxlen:
          maxlen=i-x
    else :
      dict1[sum]=i
      if sum==0:
        if i+1>maxlen:
          maxlen=i+1
  if maxlen==-1:
    maxlen=0
  return maxlen

list1=[]
n1=int(input())
for i in range (0,n1):
  x=int(input(),2)
  list1.append(x)
print("Max length of contigious subarray :",longcontigioussubarray(list1,n1))

